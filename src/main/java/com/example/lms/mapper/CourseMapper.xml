<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lms.mapper.CourseMapper">
<resultMap id="classMap" type="com.example.lms.dto.ClassDTO">
    <result property="classNo" column="class_no"/>
    <result property="classroom" column="classroom"/>
    <result property="maxPerson" column="max_person"/>
</resultMap>

	<select id="selectCourseList"
		resultType="com.example.lms.dto.CourseDTO" parameterType="map">
		SELECT
		t.`name` AS teacherName,
		c.course_name AS courseName,
		cl.classroom as classroom,
		CONCAT(c.start_date,' ~ ',c.end_date) AS startDate,
		CONCAT(COUNT(ca.course_id),' / ',cl.max_person) AS applyPerson
		FROM course c
		INNER JOIN class cl ON c.class_no = cl.class_no
		INNER JOIN teacher t ON c.teacher_no = t.teacher_no
		LEFT JOIN course_apply ca ON c.course_id = ca.course_id
		<where>
			<if test="searchCourseOption == 'all' and searchCourse != null and searchCourse != '' ">
				AND (t.name LIKE CONCAT('%', #{searchCourse}, '%')
				OR
				c.course_name LIKE CONCAT('%', #{searchCourse}, '%'))
			</if>
			<if
				test="searchCourseOption == 'teacherName' and searchCourse != null and searchCourse != '' ">
				AND t.name LIKE CONCAT('%', #{searchCourse}, '%')
			</if>
			<if
				test="searchCourseOption == 'courseName' and searchCourse != null and searchCourse != '' ">
				AND c.course_name LIKE CONCAT('%', #{searchCourse}, '%')
			</if>
		</where>
		GROUP BY c.course_id
		ORDER BY c.course_id DESC
    	LIMIT #{startRow}, #{rowPerPage}
	</select>

	<insert id="insertCourse">
		INSERT INTO course
		(course_name, description,class_no
		,start_date, end_date, teacher_no)
		VALUES
		(#{courseName}, #{description}, #{classNo}
		, #{startDate}, #{endDate}, #{teacherNo})
	</insert>

	<select id="selectTeacherList" parameterType="map">
		select teacher_no AS teacherNo,
		name
		from teacher
	</select>

	<select id="selectClassList" parameterType="map" resultMap="classMap">
		SELECT cl.class_no, cl.classroom, cl.max_person
		FROM class cl
		LEFT JOIN (
		    SELECT class_no, MAX(end_date) AS last_end_date
		    FROM course
		    GROUP BY class_no
		) c ON cl.class_no = c.class_no
		WHERE
		    c.class_no IS NULL -- 아예 강의 배정된 적 없는 강의실 (빈 강의실)
		    OR
		    c.last_end_date &lt;= DATE_ADD(CURDATE(), INTERVAL 2 MONTH)
	</select>

	<select id="selectClassByNo" parameterType="int" resultMap="classMap">
		SELECT class_no, classroom, max_person
		FROM class
		WHERE class_no = #{classNo}
	</select>


	<select id="getTotalCount">
		SELECT COUNT(*)
		FROM course c
		INNER JOIN class cl ON c.class_no = cl.class_no
    	INNER JOIN teacher t ON c.teacher_no = t.teacher_no
		<where>
			<if test="searchCourseOption == 'all' and searchCourse != null and searchCourse != '' ">
				AND (t.name LIKE CONCAT('%', #{searchCourse}, '%')
				OR
				c.course_name LIKE CONCAT('%', #{searchCourse}, '%'))
			</if>
			<if
				test="searchCourseOption == 'teacherName' and searchCourse != null and searchCourse != '' ">
				AND t.name LIKE CONCAT('%', #{searchCourse}, '%')
			</if>
			<if
				test="searchCourseOption == 'courseName' and searchCourse != null and searchCourse != '' ">
				AND c.course_name LIKE CONCAT('%', #{searchCourse}, '%')
			</if>
		</where>
	</select>
	
	
	
	<!-- 강사별 강의리스트 -->
	<select id="selectCourseListByTeacherNo" parameterType="map" resultType="com.example.lms.dto.CourseDTO">
		SELECT course_id courseId, course_name courseName,
		       CASE 
		           WHEN start_date > CURDATE() THEN '예정'
		           WHEN end_date &lt; CURDATE() THEN '완료'
		           ELSE '진행중'
		       END AS courseActive,
		       start_date startDate, end_date endDate
		FROM course
		WHERE teacher_no = #{teacherNo}
		<choose>
			<when test="filter == '예정'">
				AND start_date > CURDATE()
			</when>
			<when test="filter == '진행중'">
				AND start_date &lt;= CURDATE() AND end_date >= CURDATE()
			</when>
			<when test="filter == '완료'">
				AND end_date &lt; CURDATE()
			</when>
			<!-- 전체일 경우 조건 없음 -->
		</choose>
		ORDER BY end_date ASC
		LIMIT #{startRow}, #{rowPerPage}
		</select>
	<!-- 강사별 강의리스트 cnt -->
	<select id="getCountCourseListByTeacherNo" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM course
		WHERE teacher_no = #{teacherNo}
		<choose>
			<when test="filter == '예정'">
				AND start_date > CURDATE()
			</when>
			<when test="filter == '진행중'">
				AND start_date &lt;= CURDATE() AND end_date >= CURDATE()
			</when>
			<when test="filter == '완료'">
				AND end_date &lt; CURDATE()
			</when>
		</choose>
	</select>
</mapper>