<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lms.mapper.ExamMapper">
	<!-- 성적 리스트 -->
	<select id="selectScoreList" parameterType="map"
		resultType="com.example.lms.dto.ExamSubmissionDTO">
		SELECT st.name, s.score, s.submit_date submitDate FROM
		student st
		LEFT JOIN exam_submission s ON st.student_no = s.student_no
		WHERE st.course_id = #{courseId} AND (exam_id = #{examId} OR exam_id
		IS NULL)
	</select>

	<!-- 시험 리스트 조회 -->
	<select id="selectExamList" parameterType="map"
		resultType="com.example.lms.dto.ExamDTO">
		SELECT title, exam_start_date examStartDate, exam_end_date
		examEndDate, exam_id examId FROM exam WHERE course_id = #{courseId}
		ORDER BY exam_end_date ASC LIMIT #{startRow}, #{rowPerPage}
	</select>
	<!-- 페이징 위한 총 데이터수 -->
	<select id="getExamCnt" parameterType="int" resultType="int">
		SELECT
		COUNT(*) FROM exam WHERE course_id = #{courseId}
	</select>
	<!-- 시험 리스트 등록 -->
	<insert id="insertExam"
		parameterType="com.example.lms.dto.ExamDTO">
		INSERT INTO exam (course_id, title, exam_start_date,
		exam_end_date)
		VALUES (#{courseId}, #{title}, #{examStartDate},
		#{examEndDate})
	</insert>
	<!-- 시험 리스트 수정 -->
	<update id="updateExam"
		parameterType="com.example.lms.dto.ExamDTO">
		UPDATE exam
		SET title = #{title}, exam_start_date =
		#{examStartDate}, exam_end_date = #{examEndDate}
		WHERE exam_id =
		#{examId}
	</update>
	<!-- 시험 리스트 삭제 -->
	<delete id="deleteExam" parameterType="int">
		DELETE FROM exam
		WHERE
		exam_id = #{examId}
	</delete>
	<!--  시험 제출 등록 -->
	<insert id="insertSubmission"> 
		parameterType="com.example.lms.dto.ExamDTO"
		useGeneratedKeys="true" keyProperty="submissionId">
		INSERT INTO exam_submission (exam_id, student_no)
		VALUES (#{examId}, #{studentNo})
	</insert>
	<!-- 시험문제 가져오기  -->
	<select id="getQuestionsByExamId" resultType="com.example.lms.dto.ExamQuestionDTO">
    SELECT * FROM exam_question
    WHERE exam_id = #{examId}
    ORDER BY question_no ASC
	</select>

	<!-- 개별 응답 저장 -->
	<insert id="insertAnswer"
		parameterType="com.example.lms.dto.ExamAnswerDTO">
		INSERT INTO exam_answer (submission_id, question_id, answer_no)
		VALUES (#{submissionId}, #{questionId}, #{answerNo})
	</insert>

	<!-- 전체 응답 일괄 저장 -->
	<insert id="insertAnswers" parameterType="java.util.List">
		INSERT INTO exam_answer (submission_id, question_id, answer_no)
		VALUES
		<foreach collection="list" item="answer" separator=",">
			(#{answer.submissionId}, #{answer.questionId}, #{answer.answerNo})
		</foreach>
	</insert>

	<!-- 자동 채점  -->
	<select id="calculateScore" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM exam_answer ea
		JOIN exam_question eq ON ea.question_id = eq.question_id
		WHERE ea.submission_id = #{submissionId}
		AND ea.answer_no = eq.correct_no
	</select>

	<!-- 점수 반영 -->
	<update id="updateScore" parameterType="map">
		UPDATE exam_submission
		SET score = #{score}
		WHERE submission_id = #{submissionId}
	</update>
	
</mapper>