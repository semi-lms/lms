<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lms.mapper.TeacherMapper">

	<!-- 개인정보 조회 -->
	<select id="selectTeacherById" parameterType="string" resultType="com.example.lms.dto.TeacherDTO">
		SELECT
	        t.teacher_no AS teacherNo,
	        t.course_id AS courseId,
	        t.teacher_id AS teacherId,
	        t.password,
	        t.name,
	        t.sn,
	        t.address,
	        t.email,
	        t.phone,
	        t.reg_date AS regDate,
	        t.temp_code AS tempCode,
	        c.course_name AS courseName
		FROM teacher t
		LEFT JOIN course c ON t.course_id = c.course_id
		WHERE t.teacher_id = #{teacherId}
	</select>
	
	<!-- 아이디 중복확인 -->
	<!-- 아이디 있는 행을 찾아서 맞으면 1 아니면 0으로 확인 -->
	<select id="isTeacherIdExist" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM teacher
		WHERE teacher_id = #{teacherId}
	</select>
	
	<!-- 비밀번호 확인 -->
	<select id="selectPasswordById" parameterType="string" resultType="string">
		SELECT password
		FROM teacher
		WHERE teacher_id = #{teacherId}
	</select>
	
	<!-- 개인정보 수정-->
	<update id="updateTeacherInfo" parameterType="com.example.lms.dto.TeacherDTO">
		UPDATE teacher
		SET 
			teacher_id = #{teacherId},
			email = #{email},
			phone = #{phone},	
			password = #{password}
		WHERE teacher_no = #{teacherNo}
	</update>
	
	<!-- 강사 리스트 -->
	<select id="getTeacherList" resultType="com.example.lms.dto.TeacherDTO">
		SELECT 
			t.teacher_no AS teacherNo,
			t.name, 
			CONCAT(
				SUBSTRING(t.phone, 1, 3), '-', 
				SUBSTRING(t.phone, 4, 4), '-', 
				SUBSTRING(t.phone, 8, 4)
			) AS phone,
			CONCAT(
				SUBSTRING(t.sn, 1, 6), '-', 
				SUBSTRING(t.sn, 7, 7)
			) AS sn,
			t.address,
			t.email,
			t.teacher_id AS teacherId,
			c.course_name AS courseName
		FROM teacher t
		LEFT join course c
		ON t.course_id = c.course_id
		ORDER BY t.name ASC;
	</select>
	
	<!-- 강사 등록 -->
	<insert id="insertTeacher" parameterType="com.example.lms.dto.TeacherDTO">
	    INSERT INTO teacher (
	    	name, phone,
	    	sn,	address,
	    	email, course_id,
		    teacher_id, password, reg_date
		)
		VALUES (
		  	#{name}, REPLACE(#{phone}, '-', ''),
		  	REPLACE(#{sn}, '-', ''), #{address},
		  	#{email}, 
			<if test="courseId != null and courseId != ''">
  				#{courseId},
			</if>
			<if test="courseId == null or courseId == ''">
  				NULL,
			</if>
		    #{teacherId}, #{password}, NOW()
		)
	</insert>
	
	<!-- 강사 상세 조회 (수정 모달용) -->
	<select id="getTeacherByNo" parameterType="com.example.lms.dto.TeacherDTO">
		SELECT
			t.teacher_no AS teacherNo,
	        t.name,
	        t.phone,
	        t.sn,
	        t.address,
	        t.email,
	        t.course_id AS courseId,
	        c.course_name AS courseName
	    FROM teacher t
	    LEFT join course c
		ON t.course_id = c.course_id
	    WHERE t.teacher_no = #{teacherNo}
	</select>
	
	<!-- 강사 정보 수정 -->
	<update id="updateTeacher" parameterType="com.example.lms.dto.TeacherDTO">
		UPDATE teacher
		SET
			name = #{name},
			phone = #{phone},
			sn = #{sn},
			address = #{address},
			email = #{email},
			course_id =
				<choose>
					<when test="courseId != null and courseId != ''">
						#{courseId}
					</when>
					<otherwise>
		  				NULL			
					</otherwise>
				</choose>
		WHERE teacher_no = #{teacherNo}
	</update>
	
	<!-- 강사 삭제 (여러 명 삭제 가능) -->
	<delete id="deleteTeachers" parameterType="list">
		DELETE FROM teacher
		WHERE teacher_no IN  
		<!-- teacher_no 컬럼이 주어진 리스트 값들 중 하나와 일치하는 경우 -->
		<foreach collection="list" item="teacherNo" open="(" separator="," close=")">
			#{teacherNo}
		</foreach>
		<!-- ex) WHERE teacher_no IN (1, 2, 3) -->
	</delete>
	
	<!-- 강사 등록 시 해당 강의에 이미 배정된 강사가 있는지 확인 -->
	<select id="isCourseAssigned" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM teacher
		WHERE course_id = #{courseId}
	</select>
	
	<!-- 강사 수정 시 본인을 제외하고 해당 강의에 배정된 강사가 있는지 확인 -->
	<select id="isCourseAssignedForUpdate" parameterType="map" resultSets="int">
		SELECT COUNT(*)
		FROM teacher
		WHERE course_id = #{courseId}
			AND teacher_no != #{teacherNo} 
	</select>
</mapper>