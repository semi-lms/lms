<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lms.mapper.AttendanceMapper">
	<resultMap id="attendanceMap" type="com.example.lms.dto.AttendanceDTO">
	    <result property="classroom" column="classroom"/>
	    <result property="studentNo" column="student_no"/>
	    <result property="name" column="name"/>
	    <result property="date" column="date"/>
	    <result property="status" column="status"/>
	</resultMap>
	
	<resultMap id="studentMap" type="com.example.lms.dto.StudentDTO">
		<result property="studentNo" column="student_no"/>
		<result property="name" column="name"/>
    	<result property="classroom" column="classroom"/>
	</resultMap>
	
    <!-- 오늘 출석현황 (그대로) -->
    <select id="getTodayAttendance" resultType="com.example.lms.dto.AttendanceDTO">
        SELECT
		   cl.classroom AS classroom,
		   COUNT(*) AS total,
		   SUM(CASE WHEN a.status IN('출석', '지각', '조퇴') THEN 1 ELSE 0 END) AS attended
		FROM attendance AS a
		INNER JOIN course AS c ON a.course_id = c.course_id
		INNER JOIN class AS cl ON c.class_no = cl.class_no
		WHERE DATE = CURDATE()
		GROUP BY a.course_id, classroom
		ORDER BY classroom;
    </select>

    <!-- 학생(본인) 출석 현황 (그대로) -->
    <select id="selectAttendanceListByStudentId" resultType="com.example.lms.dto.AttendanceDTO">
        SELECT attendance_no AS attendanceNo, student_no AS studentNo, course_id AS courseId, DATE, STATUS
        FROM attendance
        WHERE student_no = #{studentNo}
    </select>

    <!-- 전체 출석 레코드 수 (강의별) -->
    <select id="getAttendanceCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM attendance WHERE course_id = #{courseId}
    </select>

    <!-- 전체 학생 수 (강의별) -->
    <select id="getStudentCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM student WHERE course_id = #{courseId}
    </select>

	<!-- 
	    전체 출석 가능 횟수(강의별)
	    "한 달 동안(기간 내) 학생 모두가 출석할 수 있는 총 횟수"를 구하는 쿼리
	
	    ※ 예시: 평일 수업 20일 × 학생 10명 = 200 (이 달에 가능한 전체 출석횟수)
	-->
	<select id="getAttendanceTotalCount" parameterType="map" resultType="int">
	    <!-- 
	        [1] calendar CTE: 
	        - startDate부터 endDate 하루 전까지, 날짜들을 한 줄씩 생성하는 재귀 쿼리
	        - 예시: 2025-06-01 ~ 2025-06-30 이면, 6월 1일부터 29일까지 한 줄씩 생성
	    -->
	    WITH RECURSIVE calendar AS (
	        SELECT DATE(#{startDate}) AS dt
	        UNION ALL
	        SELECT dt + INTERVAL 1 DAY
	        FROM calendar
	        WHERE dt + INTERVAL 1 DAY &lt; #{endDate}
	    ),
	    <!-- 
	        [2] workdays CTE: 
	        - calendar에서 주말(토, 일) 빼고, 공휴일 테이블(holidays)에 등록된 날도 제외
	        - DAYOFWEEK: 2~6이 월~금 (일요일 1, 월 2, ..., 토 7)
	        - dt NOT IN (SELECT date FROM holidays): 해당 날짜가 공휴일 테이블에 없을 때만 카운트
	        - 결과적으로 "이번 달 실제 수업하는 평일"의 개수만 남음
	    -->
	    workdays AS (
	        SELECT COUNT(*) AS day_count
	        FROM calendar
	        WHERE DAYOFWEEK(dt) BETWEEN 2 AND 6
	        AND dt NOT IN (SELECT date FROM holidays)
	    )
	    <!-- 
	        [3] 실제 리턴 
	        - (실제 수업하는 평일 개수) × (학생 수) = 전체 출석 가능 횟수
	        - ex) 19일 평일 수업 × 11명 학생 = 209
	    -->
	    SELECT w.day_count * #{studentCount}
	    FROM workdays w
	</select>

    <!-- 실제 출석(지각 포함, 강의별) -->
    <select id="getActualAttendance" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM attendance
        WHERE date BETWEEN #{startDate} AND #{endDate}
          AND (status = '출석' OR status = '지각')
          AND course_id = #{courseId}
    </select>
    
    <select id="getAttendanceByClass" parameterType="int" resultMap="attendanceMap">
	    SELECT
	        cl.classroom,
	        s.student_no,
	        s.name,
	        a.date,
	        a.status
	    FROM course c
	    INNER JOIN attendance a ON c.course_id = a.course_id
	    INNER JOIN class cl ON cl.class_no = c.class_no
	    INNER JOIN student s ON a.student_no = s.student_no
	    WHERE c.course_id = #{courseId}
	    ORDER BY s.student_no, a.date
	</select>
	
	<select id="getStudentListByCourse" resultMap="studentMap" parameterType="int">
        SELECT s.student_no, s.name, cl.classroom
	    FROM attendance a
	    INNER JOIN student s ON a.student_no = s.student_no
	    INNER JOIN course c ON a.course_id = c.course_id
	    INNER JOIN class cl ON c.class_no = cl.class_no
	    WHERE a.course_id = #{courseId}
	    GROUP BY s.student_no, s.name, cl.classroom
	    ORDER BY s.name
	</select>
	
	<select id="getHolidayList">
		SELECT date
		FROM holidays
	</select>
	
	<!-- 출결 등록 / 수정 -->
	<!-- 데이터 있는지 확인 -->
	<select id="isAttendance" parameterType="com.example.lms.dto.AttendanceDTO" resultType="int">
		SELECT COUNT(*) FROM attendance
		WHERE student_no = #{studentNo} AND course_id = #{courseId} AND date = #{date}
	</select>
	<!-- 데이터가 있으면 수정 없으면 등록 -->
	<insert id="insertAttendance" parameterType="com.example.lms.dto.AttendanceDTO">
		INSERT INTO attendance (student_no, course_id, date, status)
		VALUES (#{studentNo}, #{courseId}, #{date}, #{status})
	</insert>
	<update id="updateAttendance" parameterType="com.example.lms.dto.AttendanceDTO">
		UPDATE attendance
		SET status = #{status}
		WHERE student_no = #{studentNo} AND course_id = #{courseId} AND date = #{date}
	</update>
</mapper>